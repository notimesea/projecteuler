#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;

bool check(int v) {
    for (int i = 2; i * i <= v; ++i) {
        if (v % i == 0) {
            return false;
        }
    }
    return true;
}

long long pw(long long a, long long n, long long m) {
    ll res = 1;
    while (n) {
        if (n & 1ll) {
            res = res * a % m;
        }
        a = a * a % m;
        n >>= 1;
    }
    return res;
}

const int K = 30;

unordered_map <int, long long> dp[K];

const int N = 1000000;

long long lk[K][N];

long long mod = 1234567891;

long long solve(int n, int m) {
    if (n == 0) {
        return 1;
    }
    if (m < N) {
        return lk[n][m];
    }

    if (dp[n].count(m)) {
        return dp[n][m];
    }
    int last = 1;
    long long & res = dp[n][m];
    int d;
    for (d = 2; d * d <= m; ++d) {
        int cur = d;
        res += (cur - last) * solve(n - 1, m / cur);
        last = cur;
    }
    if (d * d == m) {
        int cur = d;
        res += (cur - last) * solve(n - 1, m / cur);
        last = cur;
    }
    for (--d; d; --d) {
        int cur = m / d;
        res += (cur - last) * solve(n - 1, m / cur);
        last = cur;
    }
    res %= mod;
    return res;
}

long long binomial(int n, int k) {
    if (k > n) {
        return 0;
    }
    long long res = 1;
    for (int i = 0; i < k; ++i) {
        res = res * (n - i) % mod;
        res = res * pw(i + 1, mod - 2, mod) % mod;
    }
    return res;
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
    #define fname "parts"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    lk[0][1] = 1;
    for (int i = 0; i < K; ++i) {
        for (int j = 1; j < N; ++j) {
            if (lk[i][j]) for (int v = 2; v * j < N; ++v) {
                lk[i + 1][v * j] += lk[i][j];
                if (lk[i + 1][v * j] >= mod) lk[i + 1][v * j] -= mod;
            }
            lk[i][j] += lk[i][j - 1];
        }
    }
    int n = 1000000000;
    int m = 1000000000;
    long long ans = 0;
    for (int k = 0; k < K; ++k) {
        ans += binomial(n, k) * solve(k, m);
        ans %= mod;
    }
    cout << ans << "\n";
    //cout << solve(5, 1e9) << "\n";

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
