#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;

bool check(int v) {
    for (int i = 2; i * i <= v; ++i) {
        if (v % i == 0) {
            return false;
        }
    }
    return true;
}

long long pw(long long a, long long n, long long m) {
    ll res = 1;
    while (n) {
        if (n & 1ll) {
            res = res * a % m;
        }
        a = a * a % m;
        n >>= 1;
    }
    return res;
}


int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
#define fname "parts"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    long long n = pw(10, 18, 1ll << 62);

    vector <int> x;

    int p = 2, q = 3;

    int s = 0;

    for (int i = 0; pw(p, i, 1ll << 62) <= n; ++i) {
        int j;
        for (j = 0; pw(p, i, 1ll << 62) * pw(q, j, 1ll << 62) <= n; ++j) { }
        x.push_back(j);
        s += j;
    }

    long double fact[s + 1];
    fact[0] = 0;
    for (int i = 1; i <= s; ++i) {
        fact[i] = fact[i - 1] + logl(i);
    }

    long double ans = fact[s];

    for (int i = 0; i < x.size(); ++i) {
        for (int j = 1; j <= x[i]; ++j) {
            int hook = x[i] - j;
            for (int k = i; k < x.size(); ++k) {
                if (x[k] >= j) {
                    ++hook;
                } else {
                    break;
                }
            }
            ans -= logl(hook);
        }
    }

    printf("%.10LE", expl(ans));

//    cout << exp(ans) << "\n";



#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
