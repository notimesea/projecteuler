#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;


#include <gmp.h>

const int N = 10;

long long fact[2 * N + 1];

long long ans = 0;

void rec(int pos, long long mul, int cnt, int sum) {
    if (pos == N) {
        if (cnt == N && (N * (N - 1) - sum - sum) % 11 == 0) {
            ans += mul;
        }
        return;
    }
    for (int i = 0; i <= 2 && cnt + i <= N; ++i) {
        rec(pos + 1, mul / fact[i] / fact[2 - i], cnt + i, sum + i * pos);
    }
}

void rec2(int pos, long long mul, int cnt, int sum) {
    if (pos == N) {
        if (cnt == N && (N * (N - 1) - sum - sum) % 11 == 0) {
            ans -= mul;
        }
        return;
    }

    int cc = pos == 0 ? 1 : 2;

    for (int i = 0; i <= cc && cnt + i <= N; ++i) {
        rec2(pos + 1, mul / fact[i] / fact[cc - i], cnt + i, sum + i * pos);
    }
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
#define fname "race"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    fact[0] = 1;

    for (int i = 1; i <= 2 * N; ++i) {
        fact[i] = fact[i - 1] * i;
    }

    rec(0, fact[N] * fact[N], 0, 0);
    rec2(0, fact[N] * fact[N - 1], 0, 0);

    cout << ans << "\n";

    vector <int> x;

    for (int i = 0; i < N; ++i) {
        x.push_back(i);
        x.push_back(i);
    }

//    int ans2 = 0;
//
//    do {
//        if (x.front() == 0) {
//            continue;
//        }
//        int s = 0;
//        for (int i = 0; i < x.size(); ++i) {
//            if (i & 1) {
//                s += x[i];
//            } else {
//                s -= x[i];
//            }
//        }
//        if (s == 0) {
//            ++ans2;
//        }
//    } while(next_permutation(all(x)));
//
//    cout << ans2 << "\n";

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
} 
