#include "bits/stdc++.h"

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') {}
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;

map <long long, int> res;

int mex(vector <int> & x) {
    vector <int> used(x.size() + 1);
    for (int a : x) {
        if (a >= used.size()) {
            continue;
        }
        used[a] = 1;
    }
    for (int i = 0; ; ++i) {
        if (!used[i]) {
            return i;
        }
    }
    assert(false);
}


int solve(long long x) {
    if (x == 1) {
        return 0;
    }
    if (res.count(x)) {
        return res[x];
    }
    vector <int> t;
    t.push_back(solve(x - 1));

    long long v = 2;

    for (; v * v < x; ++v) {
        if (x % v == 0) {
            t.push_back(solve(x - v));
            t.push_back(solve(x - x / v));
        }
    }
    if (v * v == x) {
        t.push_back(solve(x - v));
    }
    return res[x] = mex(t);
}

int solve2(long long x) {
    int res = 0;
    while (x % 2 == 0) {
        x /= 2;
        ++res;
    }
    return res;
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
#define fname "race"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    long long N = 123456787654321ll;

    long long ans = 0;

//    for (int i = 1; i <= N; ++i) {
//        for (int j = 1; j <= N; ++j) {
//            for (int k = 1; k <= N; ++k) {
//                if (solve(i) ^ solve(j) ^ solve(k)) {
//                    ++ans;
//                }
//            }
//        }
//    }

//    for (int i = 1; i <= N; ++i) {
//        assert(solve(i) == solve2(i));
//        cout << i << " " << solve(i) << "\n";
//    }

    long long mod = 1234567890;

    for (int i = 0; (1ll << i) <= N; ++i) {
        for (int j = 0; (1ll << j) <= N; ++j) {
            for (int k = 0; (1ll << k) <= N; ++k) {
                if (i ^ j ^ k) {
                    long long u = ((N >> i) + 1) / 2 % mod, v = ((N >> j) + 1) / 2 % mod, w = ((N >> k) + 1) / 2 % mod;
                    ans += u * v % mod * w % mod;
                    ans %= mod;
                }
            }
        }
    }

    cout << ans << "\n";

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
} 
