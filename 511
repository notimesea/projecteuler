#include "bits/stdc++.h"

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') {}
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;

long long mod = 1000000000;

typedef vector <long long> poly;

long long m;

poly operator*(const poly &l, const poly &r) {
    poly res(m);

    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < m; ++j) {
            res[(i + j) % m] += l[i] * r[j];
            res[(i + j) % m] %= mod;
        }
    }

    return res;
}

poly pw(poly a, long long n) {
    poly res(m);
    res[0] = 1;

    while (n) {
        if (n & 1ll) {
            res = res * a;
        }
        a = a * a;
        n >>= 1;
    }

    return res;
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
#define fname "race"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    long long X = 1234567898765ll;

    m = 4321;

    vector <long long> divs;

    long long t = 1;

    for (; t * t < X; ++t) {
        if (X % t == 0) {
            divs.push_back(t);
            divs.push_back(X / t);
        }
    }
    if (t * t == X) {
        divs.push_back(t);
    }

    poly x(m);

    poly a(m);

    for (long long d : divs) {
        a[d % m]++;
    }

    x[X % m] = 1;

    x = x * pw(a, X);

    cout << x[0] << "\n";

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
} 
