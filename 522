#include <bits/stdc++.h>


#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;


long long mod = 135707531;

long long pw(long long a, long long n) {
    long long res = 1;
    while (n) {
        if (n & 1ll) {
            res = res * a % mod;
        }
        a = a * a % mod;
        n >>= 1;
    }
    return res;
}

long long inv(long long a) {
    return pw(a, mod - 2);
}

int n;

long long ans;

vector <int> g[10];

void rec(int pos) {
    if (pos == n) {

        int used[n];
        clr(used);
        for (int i = 0; i < n; ++i) {
            if (used[i]) {
                continue;
            }

            queue <int> q;
            int cl = 0;
            q.push(i);
            used[i] = 1;
            while (!q.empty()) {
                int v = q.front();
                q.pop();
                if (g[v].size() == 1) {
                    ++cl;
                }
                for (int to : g[v]) {
                    if (!used[to]) {
                        used[to] = 1;
                        q.push(to);
                    }
                }
            }
            ans += cl == 0;

        }
        return;
    }

    for (int i = 0; i < n; ++i) {
        if (i == pos) continue;
        g[pos].push_back(i);
        g[i].push_back(pos);
        rec(pos + 1);
        g[pos].pop_back();
        g[i].pop_back();
    }
}


long long N = 12344321;

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
    #define fname "race"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    long long ans = 0;
    //number of leaves
    ans += N * (N - 1) % mod * pw(N - 2, N - 1);
    //number of subpermutations
    long long f = N;
    for (long long k = 2; k <= N; ++k) {
        f = f * (N - k + 1) % mod;
        ans += inv(k) * pw(N - k - 1, N - k) % mod * f % mod;
    }
    //number of permutations
    ans -= f * inv(N);
    ans %= mod;
    ans = (ans + mod) % mod;
    cout << ans << "\n";

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
