#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;


long long mod = 1000000007;

long long pw(long long a, long long n) {
    long long res = 1;
    while (n) {
        if (n & 1ll) {
            res = res * a % mod;
        }
        a = a * a % mod;
        n >>= 1;
    }
    return res;
}

long long inv(long long a) {
    return pw(a, mod - 2);
}

int n;

int ans[100];

int flag;

void rec(int pos, long long rem) {
    if (flag) {
        return;
    }
    if (rem < 0) {
        return;
    }
    if (pos) {
        long long x = (1ll << (n - 1)) - (1ll << (pos - 1));
        if (rem > x) {
            return;
        }
        if (__builtin_popcountll(rem) > n - pos) {
            return;
        }
    }
    //cerr << pos << " " << rem << endl;
    if (pos == n) {
        cout << n << endl;
        for (int i = 0; i < n; ++i) {
            cout << ans[i] << " ";
        }
        cout << endl;
        flag = 1;
        return;
    }

    ans[pos] = pos;
    rec(pos + 1, rem);
    for (int i = pos - 1; i >= 0; --i) {
        ans[pos] = i;
        rec(pos + 1, rem - (1ll << i));
    }
}

int used[100];

void rec1(int pos, long long rem) {
    if (flag) {
        return;
    }
    if (rem < 0) {
        return;
    }
    if (pos) {
        long long x = (1ll << (n - 1)) - (1ll << (pos - 1));
        if (rem > x) {
            return;
        }

        if (__builtin_popcountll(rem) > n - pos) {
            return;
        }
        for (int i = 0; i < n; ++i) {
            if (!used[i]) {
                break;
            }
            if (rem & (1ll << i)) {
                return;
            }
        }
    }
//    cout << "CUR " << pos << " " << rem << endl;
//    for (int i = 0; i < pos; ++i) {
//        cout << ans[i] << " ";
//    }
//    cout << "\n";
    //cerr << pos << " " << rem << endl;
    if (pos == n) {
        cout << n << endl;
        for (int i = 0; i < n; ++i) {
            cout << ans[i] + 1 << " ";
        }
        cout << endl;
        clr(used);
        flag = 1;
        return;
    }
    int x = 0;

    for (int i = 0; i < n; ++i) {
        x += used[i];
        if (!used[i]) {
            used[i] = 1;
            ans[pos] = i;
            if (x == pos) {
                rec1(pos + 1, rem);
            } else {
                rec1(pos + 1, rem - (1ll << x));
            }
            used[i] = 0;
        }
    }
}

bool check(int pos, long long rem) {
    if (pos) {
        long long x = (1ll << (n - 1)) - (1ll << (pos - 1));
        return rem <= x;
    }
    return true;
}

set <long long> res;

void rec2(int pos, long long sum) {
    if (pos == n) {
        res.insert(sum);
        return;
    }
    for (int i = 0; i < pos; ++i) {
        rec2(pos + 1, sum + (1ll << i));
    }
    rec2(pos + 1, sum);
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
    #define fname "race"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

//    for (n = 1; n <= 10; ++n) {
//        for (int j = 1; j <= n; ++j) {
//            res.clear();
//            rec2(j, 0);
//            cout << res.size() << " ";
//            for (auto v : res) {
//                assert(__builtin_popcountll(v) <= n - j);
//            }
//        }
//        cout << "\n";
//    }

    //answer[] = {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 25 27 28 30 32 34 36 38 40 39 42 45 43 41 37 35 33 31 29 44}


    long long x = 8916100448256ll;

    flag = 0;
    for (n = 2; n <= 100; ++n) {
        cerr << n << endl;
        rec1(0, x);
        if (flag) break;
//        if (!check(1, x)) continue;
//        int ans[n];
//        for (int i = 0; i < n; ++i) {
//            for (int j = 0; j < i; ++j) {
//
//            }
//        }
    }

#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
