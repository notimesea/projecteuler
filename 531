#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int ed;
    a = 0;
    while (!isdigit(ed = getchar()) && ed != '-') { }
    char neg = 0;
    if (ed == '-') {
        neg = 1;
        ed = getchar();
    }
    while (isdigit(ed)) {
        a = 10 * a + ed - '0';
        ed = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

mt19937 generator;

bool check(int v) {
    for (int i = 2; i * i <= v; ++i) {
        if (v % i == 0) {
            return false;
        }
    }
    return true;
}

long long pw(long long a, long long n, long long m) {
    ll res = 1;
    while (n) {
        if (n & 1ll) {
            res = res * a % m;
        }
        a = a * a % m;
        n >>= 1;
    }
    return res;
}

int phi[1 << 20];

int gcd (int a, int b, int & x, int & y) {
    if (a == 0) {
        x = 0; y = 1;
        return b;
    }
    int x1, y1;
    int d = gcd (b%a, a, x1, y1);
    x = y1 - (b / a) * x1;
    y = x1;
    return d;
}

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
    #define fname "parts"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    int l = 1000000;
    int r = 1005000;

    for (int i = 1; i < r; ++i) {
        phi[i] += i;
        for (int j = i + i; j < r; j += i) {
            phi[j] -= phi[i];
        }
//        if (i < 10) {
//            cout << i << " " << phi[i] << "\n";
//        }
    }

    long long ans = 0;

    for (int n = l; n < r; ++n) {
        for (int m = n + 1; m < r; ++m) {
            int p1 = phi[n];
            int p2 = phi[m];

            long long m1 = n, m2 = m;

            int i1, i2;

            int g = gcd(m1, m2, i1, i2);

            if (p1 % g != p2 % g) {
                continue;
            }

            long long res = p1 + m1 * (1ll * i1 * (p2 - p1) / g);
            res %= m1 * m2 / g;
            if (res < 0) res += m1 * m2 / g;

//            cerr << n << " " << m << " " << res << "\n";
//
//            cerr << res % n << " " << phi[n] << "\n";
//            cerr << res % m << " " << phi[m] << "\n";


//            assert(res % n == phi[n]);
//            assert(res % m == phi[m]);
            ans += res;
        }
    }

    cout << ans << "\n";


#ifdef LOCAL
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
